version: 0.2

phases:
  pre_build:
    commands:
      - echo "=== PRE BUILD PHASE ==="
      - echo "Fazendo login no ECR..."      
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 566362508101.dkr.ecr.us-east-1.amazonaws.com
      - REPOSITORY_URI=566362508101.dkr.ecr.us-east-1.amazonaws.com/bia
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo "Repository URI:" $REPOSITORY_URI
      - echo "Image Tag:" $IMAGE_TAG
      - echo "Testando conectividade com ECR..."
      - aws ecr describe-repositories --repository-names bia --region us-east-1
  build:
    commands:
      - echo "=== BUILD PHASE ==="
      - echo "Build iniciado em" `date`
      - echo "Gerando imagem da BIA..."
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - echo "Imagens criadas:"
      - docker images | grep bia || echo "Nenhuma imagem encontrada com 'bia'"
      - docker images | head -10
  post_build:
    commands:
      - echo "=== POST BUILD PHASE ==="
      - echo "Build finalizado com sucesso em" `date`
      - echo "Fazendo push da imagem para o ECR..."
      - echo "Verificando espaço em disco..."
      - df -h
      - echo "Verificando imagens Docker..."
      - docker images
      - echo "Iniciando push da imagem latest..."
      - |
        if docker push $REPOSITORY_URI:latest; then
          echo "✅ Push da imagem latest concluído com sucesso!"
        else
          echo "❌ Erro no push da imagem latest"
          echo "Tentando novamente em 10 segundos..."
          sleep 10
          docker push $REPOSITORY_URI:latest
        fi
      - echo "Iniciando push da imagem com tag..."
      - |
        if docker push $REPOSITORY_URI:$IMAGE_TAG; then
          echo "✅ Push da imagem com tag concluído com sucesso!"
        else
          echo "❌ Erro no push da imagem com tag"
          echo "Tentando novamente em 10 segundos..."
          sleep 10
          docker push $REPOSITORY_URI:$IMAGE_TAG
        fi
      - echo "Gerando artefato da imagem para o ECS"
      - printf '[{"name":"bia","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo "Conteúdo do imagedefinitions.json:"
      - cat imagedefinitions.json
artifacts:
  files: imagedefinitions.json